[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ParticleDetection"
version = "0.4.0"
description = "Tools to track particles with machine learning."
authors = ["Adrian Niemann <adrian.niemann@gmx.de>"]
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.8",
    "Operating System :: OS Independent",
    "Environment :: GPU :: NVIDIA CUDA",
    "Intended Audience :: Science/Research",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Physics",
]
documentation = "https://particletracking.readthedocs.io/"
repository = "https://github.com/ANP-Granular/ParticleTracking"
packages = [
    { include = "ParticleDetection", from = "src"},
]

[tool.poetry.dependencies]
python = ">=3.8,<3.12"
matplotlib = [
    {version = ">=3.8", python = ">=3.9"},
    {version = ">=3.6.1,<3.8", python = "<3.9"}
]
networkx = ">=3.1"
numpy = [
    {version = ">=1.23.4", python = ">=3.9"},
    {version = ">=1.21,<=1.25", python = "<3.9"}
]
opencv-python-headless = ">=4.8.1.78"
pandas= [
    {version = ">=2.1.1", python = ">=3.9"},
    {version = "<2.1", python = "<3.9"}
]
pulp = ">=2.7.0"
tqdm = ">=4.64.1"
scikit-learn = ">=1.3.1"
scikit-image = [
    {version = ">=0.22.0", python = ">=3.9"},
    {version = ">=0.21.0,<0.22", python = "<3.9"},
]
scipy = [
    {version=">=1.9.3", python = ">=3.9"},
    {version="<1.11.0", python = "<3.9"}
]
torch = [
    # Linux
    {version = ">=2", platform = "linux", markers = "extra != 'cpu'"},
    # The commented version below is the intended one, that does not work with
    # pip. The used version specifies the URLs manually which is not desirable.
    # {version = ">=2", platform = "linux", source = "pytorch_cpu", markers = "extra == 'cpu'"},
    {python = "==3.8", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torch-2.0.1%2Bcpu-cp38-cp38-linux_x86_64.whl"},
    {python = "==3.9", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torch-2.0.1%2Bcpu-cp39-cp39-linux_x86_64.whl"},
    {python = "==3.10", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torch-2.0.1%2Bcpu-cp310-cp310-linux_x86_64.whl"},
    {python = "==3.11", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torch-2.0.1%2Bcpu-cp311-cp311-linux_x86_64.whl"},
    # Fall-back version for architecture!=x86, although it probably won't work
    # (see explanation above)
    {version = ">=2", platform = "linux", source = "pytorch_cpu", markers = "extra == 'cpu' and platform_machine != 'x86_64'"},

    # Windows
    {version = ">=2", platform = "win32", markers = "extra != 'gpu' and extra != 'detectron'"},
    # The commented version below is the intended one, that does not work with
    # pip. The used version specifies the URLs manually which is not desirable.
    # {version = ">=2", platform = "win32", source = "pytorch_cu118", markers = "extra == 'gpu' or extra == 'detectron'"},
    {python = "==3.8", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp38-cp38-win_amd64.whl"},
    {python = "==3.9", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp39-cp39-win_amd64.whl"},
    {python = "==3.10", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp310-cp310-win_amd64.whl"},
    {python = "==3.11", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torch-2.0.1%2Bcu118-cp311-cp311-win_amd64.whl"},
    # Fall-back version for architecture!=AMD64, although it probably won't
    # work (see explanation above)
    {version = ">=2", platform = "win32", source = "pytorch_cu118", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine != 'AMD64'"},

    # macOS
    {version = ">=2", platform = "darwin"}, # currently no GPU support on macOS
]
torchvision = [
    # Linux
    {version = ">=0.14.0", platform = "linux", markers = "extra != 'cpu'"},
    # The commented version below is the intended one, that does not work with
    # pip. The used version specifies the URLs manually which is not desirable.
    # {version = ">=0.14.0", platform = "linux", source = "pytorch_cpu", markers = "extra == 'cpu'"},
    {python = "==3.8", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchvision-0.15.2%2Bcpu-cp38-cp38-linux_x86_64.whl"},
    {python = "==3.9", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchvision-0.15.2%2Bcpu-cp39-cp39-linux_x86_64.whl"},
    {python = "==3.10", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchvision-0.15.2%2Bcpu-cp310-cp310-linux_x86_64.whl"},
    {python = "==3.11", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchvision-0.15.2%2Bcpu-cp311-cp311-linux_x86_64.whl"},
    # Fall-back version for architecture!=x86, although it probably won't work
    # (see explanation above)
    {version = ">=0.14.0", platform = "linux", source = "pytorch_cpu", markers = "extra == 'cpu' and platform_machine != 'x86_64'"},

    # Windows
    {version = ">=0.14.0", platform = "win32", markers = "extra != 'gpu' or extra != 'detectron'"},
    # The commented version below is the intended one, that does not work with
    # pip. The used version specifies the URLs manually which is not desirable.
    # {version = ">=0.15.0", platform = "win32", source = "pytorch_cu118", markers = "extra == 'gpu' or extra == 'detectron'"},
    {python = "==3.8", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp38-cp38-win_amd64.whl"},
    {python = "==3.9", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp39-cp39-win_amd64.whl"},
    {python = "==3.10", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp310-cp310-win_amd64.whl"},
    {python = "==3.11", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchvision-0.15.2%2Bcu118-cp311-cp311-win_amd64.whl"},
    # Fall-back version for architecture!=AMD64, although it probably won't
    # work (see explanation above)
    {version = ">=0.15.0", platform = "win32", source = "pytorch_cu118", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine != 'AMD64'"},

    # macOS
    {version = ">=0.14.0", platform = "darwin"}, # currently no GPU support on macOS
]
torchaudio = [
    # Linux
    {version = ">=2", platform = "linux", markers = "extra != 'cpu'"},
    # The commented version below is the intended one, that does not work with
    # pip. The used version specifies the URLs manually which is not desirable.
    # {version = ">=2", platform = "linux", source = "pytorch_cpu", markers = "extra == 'cpu'"},
    {python = "==3.8", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchaudio-2.0.2%2Bcpu-cp38-cp38-linux_x86_64.whl"},
    {python = "==3.9", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchaudio-2.0.2%2Bcpu-cp39-cp39-linux_x86_64.whl"},
    {python = "==3.10", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchaudio-2.0.2%2Bcpu-cp310-cp310-linux_x86_64.whl"},
    {python = "==3.11", platform = "linux", markers = "extra == 'cpu' and platform_machine == 'x86_64'", url = "https://download.pytorch.org/whl/cpu/torchaudio-2.0.2%2Bcpu-cp311-cp311-linux_x86_64.whl"},
    # Fall-back version for architecture!=x86, although it probably won't work
    # (see explanation above)
    {version = ">=2", platform = "linux", source = "pytorch_cpu", markers = "extra == 'cpu' and platform_machine != 'x86_64'"},

    # Windows
    {version = ">=2", platform = "win32", markers = "extra != 'gpu' or extra != 'detectron'"},
    # The commented version below is the intended one, that does not work with
    # pip. The used version specifies the URLs manually which is not desirable.
    # {version = ">=2", platform = "win32", source = "pytorch_cu118", markers = "extra == 'gpu' or extra == 'detectron'"},
    {python = "==3.8", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchaudio-2.0.2%2Bcu118-cp38-cp38-win_amd64.whl"},
    {python = "==3.9", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchaudio-2.0.2%2Bcu118-cp39-cp39-win_amd64.whl"},
    {python = "==3.10", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchaudio-2.0.2%2Bcu118-cp310-cp310-win_amd64.whl"},
    {python = "==3.11", platform = "win32", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine == 'AMD64'", url = "https://download.pytorch.org/whl/cu118/torchaudio-2.0.2%2Bcu118-cp311-cp311-win_amd64.whl"},
    # Fall-back version for architecture!=AMD64, although it probably won't
    # work (see explanation above)
    {version = ">=2", platform = "win32", source = "pytorch_cu118", markers = "(extra == 'gpu' or extra == 'detectron') and platform_machine != 'AMD64'"},

    # macOS
    {version = ">=2", platform = "darwin"}, # currently no GPU support on macOS
]
trackpy = ">=0.6.1"

imgaug = {git = "https://github.com/aleju/imgaug.git", rev="0101108", optional = true}
importlib-resources = {version = ">=6.1", python = "<3.9", optional = true}
Pillow = {version = ">=10", optional = true}
protobuf = {version = "==3.20.1", optional = true}
pytest = {version = ">=7.4.2", optional = true}
pytest-cov = {version = ">=4.1.0", optional = true}
tensorboard =  {version = "*", optional = true}

[[tool.poetry.source]]
name = "pytorch_cu118"
url = "https://download.pytorch.org/whl/cu118/"
priority = "explicit"

[[tool.poetry.source]]
name = "pytorch_cpu"
url = "https://download.pytorch.org/whl/cpu/"
priority = "explicit"

[tool.poetry.extras]
CPU = []    # keep this to force installing pytorch with CPU support only
GPU = []    # keep this to force installing pytorch with GPU support
DETECTRON = ["imgaug", "Pillow", "protobuf", "tensorboard"]
TEST = ["pytest", "importlib_resources", "pytest-cov"]

[tool.pytest.ini_options]
addopts = "--cov=src --cov-report=html"
testpaths = [
    "tests/",
]
